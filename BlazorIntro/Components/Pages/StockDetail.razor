@page "/stockdetail/{slug}"
@inject HttpClient Http
@using HtmlAgilityPack;
@using System.Text.RegularExpressions;
@using Microsoft.AspNetCore.Components;


@if (isLoading)
{
    <p>Yükleniyor...</p>
}
else if (apiError)
{
    <p>Hata: @errorMessage</p>
}
else
{
<div>
    <h4> <strong>@product.name</strong> </h4>
    <img src="@fixedImageUrl" alt="@product.name" width="400" />
    <br />
    <p><strong>Fiyat:</strong> <span style="font-size: 1.5em; color: #007bff;">@($"{product.price.sale_price:N2} {product.price.currency_symbol}")</span></p>
    
    <p><strong>Açıklama:</strong>@((MarkupString)product.description)</p>
</div>
}

@code {
    private string plainTextDescription = "";
    private string fixedImageUrl = "";
    [Parameter]
    public string slug { get; set; }

    private const string ApiKey = "sami";
    private const string ApiSecret = "sami";
    private bool isLoading = true;
    private bool apiError = false;
    private string errorMessage = "";
    private Root root;
    private Product product = new Product();

    public class Detail
    {
        public int id { get; set; }
        public object warranty_id { get; set; }
        public int unit_id { get; set; }
        public int brand_id { get; set; }
        public string name { get; set; }
        public string slug { get; set; }
        public object barcode { get; set; }
        public object stockcode { get; set; }
        public string description { get; set; }
        public int stock { get; set; }
        public int active { get; set; }
        public object discount { get; set; }
        public int vat { get; set; }
        public int is_deleted { get; set; }
        public string created_at { get; set; }
        public string updated_at { get; set; }
        public List<object> get_variants { get; set; }
        public object get_seo_information { get; set; }
        public List<object> get_translations { get; set; }
        public List<object> get_seo_translations { get; set; }
        public GetUnit get_unit { get; set; }
        public object get_warrant { get; set; }
        public List<object> get_special_area_values { get; set; }
        public List<object> get_variant_items { get; set; }
        public GetCategory get_category { get; set; }
        public GetBrand get_brand { get; set; }
        public List<GetImage> get_image { get; set; }
        public List<object> get_banner { get; set; }
    }

    public class GetBrand
    {
        public int id { get; set; }
        public string name { get; set; }
        public string slug { get; set; }
        public object description { get; set; }
        public int rank { get; set; }
        public int active { get; set; }
        public string created_at { get; set; }
        public string updated_at { get; set; }
    }

    public class GetCategory
    {
        public int id { get; set; }
        public int category_id { get; set; }
        public int product_id { get; set; }
        public string created_at { get; set; }
        public string updated_at { get; set; }
        public GetCategory get_category { get; set; }
        public int parent_id { get; set; }
        public string name { get; set; }
        public object description { get; set; }
        public string slug { get; set; }
        public int rank { get; set; }
        public int active { get; set; }
        public int is_show { get; set; }
    }

    public class GetImage
    {
        public int id { get; set; }
        public int product_id { get; set; }
        public object variant_item_id { get; set; }
        public string path { get; set; }
        public string url { get; set; }
        public string alt { get; set; }
        public string name { get; set; }
        public string extension { get; set; }
        public int is_main { get; set; }
        public int is_active { get; set; }
        public int rank { get; set; }
        public string created_at { get; set; }
        public string updated_at { get; set; }
    }

    public class GetUnit
    {
        public int id { get; set; }
        public string name { get; set; }
        public string symbol { get; set; }
        public int increase { get; set; }
        public int type { get; set; }
        public int multiplier { get; set; }
        public int is_default { get; set; }
        public string created_at { get; set; }
        public string updated_at { get; set; }
    }

    public class Image
    {
        public int id { get; set; }
        public string type { get; set; }
        public string path { get; set; }
    }

    public class Price
    {
        public string sale_price { get; set; }
        public string discount_price { get; set; }
        public int vat { get; set; }
        public int discount { get; set; }
        public string currency { get; set; }
        public string currency_symbol { get; set; }
    }

    public class PriceList
    {
        public int id { get; set; }
        public string name { get; set; }
        public string description { get; set; }
        public string buy_price { get; set; }
        public string sale_price { get; set; }
        public int discount { get; set; }
        public string discount_price { get; set; }
        public int vat_included { get; set; }
        public int currency_id { get; set; }
        public int is_default { get; set; }
    }

    public class Product
    {
        public int product_id { get; set; }
        public string name { get; set; }
        public string category { get; set; }
        public string category_slug { get; set; }
        public List<object> product_special_values { get; set; }
        public List<object> variantItems { get; set; }
        public List<object> seo { get; set; }
        public int vat { get; set; }
        public int stock { get; set; }
        public Unit unit { get; set; }
        public string brand { get; set; }
        public string brand_slug { get; set; }
        public string warrant { get; set; }
        public object barcode { get; set; }
        public object stockcode { get; set; }
        public string slug { get; set; }
        public string description { get; set; }
        public List<object> matches { get; set; }
        public Price price { get; set; }
        public List<object> variants { get; set; }
        public List<Image> images { get; set; }
        public List<object> banners { get; set; }
        public string created_at { get; set; }
        public string updated_at { get; set; }
        public Detail detail { get; set; }
        public List<PriceList> priceList { get; set; }
        public object afterProductId { get; set; }
        public int beforeProductId { get; set; }
    }

    public class Root
    {
        public bool error { get; set; }
        public string message { get; set; }
        public Product product { get; set; }
    }

    public class Unit
    {
        public string name { get; set; }
        public string symbol { get; set; }
        public int increase { get; set; }
        public int multiplier { get; set; }
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Http.DefaultRequestHeaders.Add("Dehasoft-Api-Key", ApiKey);
            Http.DefaultRequestHeaders.Add("Dehasoft-Api-Secret", ApiSecret);
            var response = await Http.GetAsync($"https://dehapi.com/api/seller/product/detail/{slug}");
            if (response.IsSuccessStatusCode)
            {
                root = await response.Content.ReadFromJsonAsync<Root>();
                if (root != null && root.error == false)
                {
                    product = root.product;
                    if (!string.IsNullOrEmpty(product.description))
                    {
                        var htmlDoc = new HtmlDocument();
                        htmlDoc.LoadHtml(product.description);
                        plainTextDescription = htmlDoc.DocumentNode.InnerText;
                    }
                    fixedImageUrl = product.images.FirstOrDefault()?.path;
                }
                else
                {
                    apiError = true;
                    errorMessage = root?.message ?? "Ürün detayı Getirilemedi!";
                }
            }
            else
            {
                apiError = true;
                errorMessage = $"Hata:{response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            apiError = true;
            errorMessage = $"Hata: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}